{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
\f3\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red32\green119\blue159;\red11\green86\blue1;
\red245\green245\blue245;\red83\green85\blue2;\red0\green0\blue117;\red11\green84\blue83;\red38\green38\blue38;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww19540\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 Create a Keystore:\
\
\pard\pardeftab720

\f1\fs28 \cf2 \expnd0\expndtw0\kerning0
Generate a private key using {\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/6/docs/technotes/tools/solaris/keytool.html"}}{\fldrslt 
\f2\fs26 \cf3 \expnd0\expndtw0\kerning0
keytool}}. For example:\
\
\pard\pardeftab720

\f2\fs26 \cf4 \cb5 \expnd0\expndtw0\kerning0
$ keytool \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
genkey \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
v \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
keystore \cf7 \expnd0\expndtw0\kerning0
my\cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
release\cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
key\cf6 \expnd0\expndtw0\kerning0
.\cf4 \expnd0\expndtw0\kerning0
keystore\cf0 \cb1 \expnd0\expndtw0\kerning0
 \cf6 \cb5 \expnd0\expndtw0\kerning0
-\cf7 \expnd0\expndtw0\kerning0
alias\cf4 \expnd0\expndtw0\kerning0
 alias_name \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
keyalg RSA \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
keysize \cf8 \expnd0\expndtw0\kerning0
2048\cf4 \expnd0\expndtw0\kerning0
 \cf6 \expnd0\expndtw0\kerning0
-\cf4 \expnd0\expndtw0\kerning0
validity \cf8 \expnd0\expndtw0\kerning0
10000\
\cf4 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1\fs28 \cf2 \cb1 \expnd0\expndtw0\kerning0
This example prompts you for passwords for the keystore and key, and to provide the Distinguished Name fields for your key. It then generates the keystore as a file called 
\f2\fs26 \cf4 \expnd0\expndtw0\kerning0
my-release-key.keystore
\f1\fs28 \cf2 \expnd0\expndtw0\kerning0
. The keystore contains a single key, valid for 10000 days. The alias is a name that you will use later when signing your app.\
\
\'97> Then tell Xamarin Studio & Visual Studio to sign the app with the created keystone. Provide the correct alias and password and compile the app.\
\
Run afterwards the Calabash Setup for Android to define the keystone for a new test server with:\
\
\pard\pardeftab720

\f3 \cf9 \expnd0\expndtw0\kerning0
calabash-android setup\
\
\pard\pardeftab720

\f1 \cf2 \expnd0\expndtw0\kerning0
The setup command created a .calabash_settings file. Check that everything is fine inside the file.\
\
There is already a generated keystone named calabash.keystore.\
Alias and password are both: calabash\
\
so that you can run the calabash tests:\
\
\pard\pardeftab720

\f3 \cf9 \expnd0\expndtw0\kerning0
rake test_android
\f1 \cf2 \expnd0\expndtw0\kerning0
\
}